function exampleTPUortho
% exampleTPUortho
%exterior orientation [rpy(radians), camera xyz]
eo = [0.184250,3.107580,0.345273,-3.781813,-0.566171,100.193073];

%Exterior Orientation covariance
eocov = [0.000183,-0.000153,-0.000049,-0.021162,0.010974,-0.000909;...
-0.000153,0.000438,0.000073,0.051112,0.006242,-0.000299;...
-0.000049,0.000073,0.000023,0.008923,-0.001257,0.000111;...
-0.021162,0.051112,0.008923,6.063994,0.392444,0.000456;...
0.010974,0.006242,-0.001257,0.392444,1.436837,-0.097038;...
-0.000909,-0.000299,0.000111,0.000456,-0.097038,0.084431];

% covariance of clicked uv point
uvcov = [0.5 0;0 0.5]; %zero these out probably

% Camera K matrix 
K = [320 0 320;0 320 240;0 0 1];

% dsm elevation and std
z0 = 0.25; % flat plane elevation
zvar = 0.2;% variance of the z of the plane

% plot covariance for camera position
f = figure(1);clf
plotCovarianceSurf(eo(4),eo(5),eo(6),eocov(4:6,4:6));
axis equal;

%% calculate covariance for each pixel
[upix,vpix] = meshgrid(1:640,1:480);
%preallocate
Xw = nan(size(upix));
Yw = nan(size(upix));
Zw = nan(size(upix));
s = nan(size(upix));
CovXYZs = cell(size(upix));
t  = nan(size(upix));
smajor = nan(size(upix));
sminor = nan(size(upix));
starttime=now;
for i=1:numel(upix)
[Xw(i),Yw(i),Zw(i),s(i),iC]=calcOrthoToPlaneTPU(upix(i),vpix(i),...
    K,eo,z0,eocov,zvar,uvcov);
    try
    [semiaxesVector,eigValues]=eig(enforceCovariance(iC(1:2,1:2),1e-6));
    Su = sqrt(eigValues(1,1));
    Sv = sqrt(eigValues(2,2));
    t(i) = atan2d(semiaxesVector(2,1),semiaxesVector(1,1));
    smajor(i) = Sv;
    sminor(i) = Su;
    CovXYZs{i}=iC;
    catch
       fprintf('DOH! %.0f...',i)
       iC
    end
    loopStatus(starttime,i,numel(upix),10000)
end
t(t<0)=t(t<0)+180; % make them all 0-180 angles
%% plot some of the covariances 
figure(10);clf
pcolor(Xw,Yw,90-t);shading flat
title('Angle');
colormap(hsv);
c = colorbar;
ylabel(c,'Angle of Error Ellipse Semi-Major Axis','fontsize',24,'interpreter','latex')

axis equal
hold on
[ii,jj] = meshgrid(round(linspace(1,size(Xw,1),30)),round(linspace(1,size(Yw,2),30)));

ind = sub2ind(size(Xw),ii(:),jj(:));
for i=ind'
    h = plotCovarianceLine(Xw(i),Yw(i),enforceCovariance(CovXYZs{i}(1:2,1:2),1e-10),0.95,inf);
    h.Color = 'k';
end
title('Simulated Orthophoto Projection Error','fontsize',30,'interpreter','latex')
xlabel('X Coordinate (m)','fontsize',24,'interpreter','latex');
ylabel('Y Coordinate (m)','fontsize',24,'interpreter','latex');
xlim([-110 160])
ylim([-150 90])
plot(eo(4),eo(5),'kp','markersize',15,'MarkerFaceColor','k')

grid on
colorbarangle(flipud([hsv; hsv]),[0.58 0.12 0.2 0.2],[0:30:330],[0 360])

%% NO IDEA IF THIS WORKS 
%BUT ITS A START AT PIXEL-PIXEL DISTANCE VARIANCE
u1 = 100;u2=120;
v1 = 100;v2=120;
z1 = 1;
z2 = 1;
z1z2cov = [0.5 0;0 0.5]; 
% above is where you could make this dependent on the spatial difference
% between points to account for how points close together covary in the
% vertical dimension
u1v1u2v2cov = diag([0.2 0.2 0.2 0.2]);
[D,varD]=calcDistTPUplane(u1,v1,u2,v2,K,eo,z1,z2,eocov,z1z2cov,u1v1u2v2cov)
end
%% Additional Functions
function [Xw,Yw,Zw,s,CovXYZs] = calcOrthoToPlaneTPU(u,v,K,eo,z0,eocov,zvar,uvcov)
%% break out the eo/io input parameters
roll = eo(1);
pitch = eo(2);
yaw = eo(3);
Xc = eo(4);
Yc = eo(5);
Zc = eo(6);
f = K(1,1);
cx = K(1,3);
cy = K(2,3);

% Solve for most probably Value
Xw=(Xc*cx*sin(pitch) - Xc*u*sin(pitch) + f*z0*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v*cos(pitch)*sin(roll) - cx*z0*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(yaw) + u*z0*cos(pitch)*cos(yaw) + cy*z0*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z0*cos(roll)*cos(yaw)*sin(pitch) - Zc*v*cos(yaw)*sin(pitch)*sin(roll) - cy*z0*cos(yaw)*sin(pitch)*sin(roll) + v*z0*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
Yw=(Yc*cx*sin(pitch) - Yc*u*sin(pitch) - f*z0*cos(yaw)*sin(roll) + v*z0*cos(roll)*cos(yaw) + u*z0*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v*cos(roll)*cos(yaw) + Yc*v*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*sin(yaw) - cy*z0*cos(roll)*cos(yaw) - cx*z0*cos(pitch)*sin(yaw) + v*z0*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z0*cos(roll)*sin(pitch)*sin(yaw) - Zc*v*sin(pitch)*sin(roll)*sin(yaw) - cy*z0*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
Zw=z0;
s=-(f*(Zc - z0))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));

% Make A Matrix with Partial Derivatives
A = nan(4,9);
A(1,1) = ((cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v*cos(pitch)*cos(roll))*(Xc*cx*sin(pitch) - Xc*u*sin(pitch) + f*z0*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v*cos(pitch)*sin(roll) - cx*z0*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(yaw) + u*z0*cos(pitch)*cos(yaw) + cy*z0*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z0*cos(roll)*cos(yaw)*sin(pitch) - Zc*v*cos(yaw)*sin(pitch)*sin(roll) - cy*z0*cos(yaw)*sin(pitch)*sin(roll) + v*z0*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2 - (Zc*v*sin(roll)*sin(yaw) - f*z0*cos(roll)*sin(yaw) + cy*z0*sin(roll)*sin(yaw) - v*z0*sin(roll)*sin(yaw) + Xc*cy*cos(pitch)*cos(roll) + Xc*f*cos(pitch)*sin(roll) - Xc*v*cos(pitch)*cos(roll) + Zc*f*cos(roll)*sin(yaw) - Zc*cy*sin(roll)*sin(yaw) - Zc*cy*cos(roll)*cos(yaw)*sin(pitch) - Zc*f*cos(yaw)*sin(pitch)*sin(roll) + Zc*v*cos(roll)*cos(yaw)*sin(pitch) + cy*z0*cos(roll)*cos(yaw)*sin(pitch) + f*z0*cos(yaw)*sin(pitch)*sin(roll) - v*z0*cos(roll)*cos(yaw)*sin(pitch))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(1,2) = ((u*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v*sin(pitch)*sin(roll))*(Xc*cx*sin(pitch) - Xc*u*sin(pitch) + f*z0*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v*cos(pitch)*sin(roll) - cx*z0*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(yaw) + u*z0*cos(pitch)*cos(yaw) + cy*z0*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z0*cos(roll)*cos(yaw)*sin(pitch) - Zc*v*cos(yaw)*sin(pitch)*sin(roll) - cy*z0*cos(yaw)*sin(pitch)*sin(roll) + v*z0*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2 - (Xc*u*cos(pitch) - Xc*cx*cos(pitch) + u*z0*cos(yaw)*sin(pitch) + Xc*f*cos(roll)*sin(pitch) + Zc*cx*cos(yaw)*sin(pitch) - Xc*cy*sin(pitch)*sin(roll) - Zc*u*cos(yaw)*sin(pitch) + Xc*v*sin(pitch)*sin(roll) - cx*z0*cos(yaw)*sin(pitch) + Zc*f*cos(pitch)*cos(roll)*cos(yaw) - Zc*cy*cos(pitch)*cos(yaw)*sin(roll) - f*z0*cos(pitch)*cos(roll)*cos(yaw) + Zc*v*cos(pitch)*cos(yaw)*sin(roll) + cy*z0*cos(pitch)*cos(yaw)*sin(roll) - v*z0*cos(pitch)*cos(yaw)*sin(roll))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(1,3) = (f*z0*cos(yaw)*sin(roll) - v*z0*cos(roll)*cos(yaw) - u*z0*cos(pitch)*sin(yaw) - Zc*cy*cos(roll)*cos(yaw) - Zc*cx*cos(pitch)*sin(yaw) - Zc*f*cos(yaw)*sin(roll) + Zc*v*cos(roll)*cos(yaw) + Zc*u*cos(pitch)*sin(yaw) + cy*z0*cos(roll)*cos(yaw) + cx*z0*cos(pitch)*sin(yaw) - v*z0*sin(pitch)*sin(roll)*sin(yaw) + Zc*f*cos(roll)*sin(pitch)*sin(yaw) - Zc*cy*sin(pitch)*sin(roll)*sin(yaw) - f*z0*cos(roll)*sin(pitch)*sin(yaw) + Zc*v*sin(pitch)*sin(roll)*sin(yaw) + cy*z0*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(1,4) = 1;
A(1,5) = 0;
A(1,6) = -(u*cos(pitch)*cos(yaw) - cx*cos(pitch)*cos(yaw) + cy*cos(roll)*sin(yaw) + f*sin(roll)*sin(yaw) - v*cos(roll)*sin(yaw) + f*cos(roll)*cos(yaw)*sin(pitch) - cy*cos(yaw)*sin(pitch)*sin(roll) + v*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(1,7) = (u*cos(pitch)*cos(yaw) - cx*cos(pitch)*cos(yaw) + cy*cos(roll)*sin(yaw) + f*sin(roll)*sin(yaw) - v*cos(roll)*sin(yaw) + f*cos(roll)*cos(yaw)*sin(pitch) - cy*cos(yaw)*sin(pitch)*sin(roll) + v*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(1,8) = (sin(pitch)*(Xc*cx*sin(pitch) - Xc*u*sin(pitch) + f*z0*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v*cos(pitch)*sin(roll) - cx*z0*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(yaw) + u*z0*cos(pitch)*cos(yaw) + cy*z0*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z0*cos(roll)*cos(yaw)*sin(pitch) - Zc*v*cos(yaw)*sin(pitch)*sin(roll) - cy*z0*cos(yaw)*sin(pitch)*sin(roll) + v*z0*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2 - (Xc*sin(pitch) + Zc*cos(pitch)*cos(yaw) - z0*cos(pitch)*cos(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(1,9) = (Xc*cos(pitch)*sin(roll) + Zc*cos(roll)*sin(yaw) - z0*cos(roll)*sin(yaw) - Zc*cos(yaw)*sin(pitch)*sin(roll) + z0*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll)) - (cos(pitch)*sin(roll)*(Xc*cx*sin(pitch) - Xc*u*sin(pitch) + f*z0*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v*cos(pitch)*sin(roll) - cx*z0*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(yaw) + u*z0*cos(pitch)*cos(yaw) + cy*z0*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z0*cos(roll)*cos(yaw)*sin(pitch) - Zc*v*cos(yaw)*sin(pitch)*sin(roll) - cy*z0*cos(yaw)*sin(pitch)*sin(roll) + v*z0*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2;
A(2,1) = ((cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v*cos(pitch)*cos(roll))*(Yc*cx*sin(pitch) - Yc*u*sin(pitch) - f*z0*cos(yaw)*sin(roll) + v*z0*cos(roll)*cos(yaw) + u*z0*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v*cos(roll)*cos(yaw) + Yc*v*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*sin(yaw) - cy*z0*cos(roll)*cos(yaw) - cx*z0*cos(pitch)*sin(yaw) + v*z0*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z0*cos(roll)*sin(pitch)*sin(yaw) - Zc*v*sin(pitch)*sin(roll)*sin(yaw) - cy*z0*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2 - (v*z0*cos(yaw)*sin(roll) + Yc*cy*cos(pitch)*cos(roll) - Zc*f*cos(roll)*cos(yaw) + Yc*f*cos(pitch)*sin(roll) - Yc*v*cos(pitch)*cos(roll) + Zc*cy*cos(yaw)*sin(roll) + f*z0*cos(roll)*cos(yaw) - Zc*v*cos(yaw)*sin(roll) - cy*z0*cos(yaw)*sin(roll) - Zc*cy*cos(roll)*sin(pitch)*sin(yaw) - Zc*f*sin(pitch)*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(pitch)*sin(yaw) + cy*z0*cos(roll)*sin(pitch)*sin(yaw) + f*z0*sin(pitch)*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(pitch)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(2,2) = ((u*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v*sin(pitch)*sin(roll))*(Yc*cx*sin(pitch) - Yc*u*sin(pitch) - f*z0*cos(yaw)*sin(roll) + v*z0*cos(roll)*cos(yaw) + u*z0*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v*cos(roll)*cos(yaw) + Yc*v*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*sin(yaw) - cy*z0*cos(roll)*cos(yaw) - cx*z0*cos(pitch)*sin(yaw) + v*z0*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z0*cos(roll)*sin(pitch)*sin(yaw) - Zc*v*sin(pitch)*sin(roll)*sin(yaw) - cy*z0*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2 - (Yc*u*cos(pitch) - Yc*cx*cos(pitch) - cx*z0*sin(pitch)*sin(yaw) + u*z0*sin(pitch)*sin(yaw) + Yc*f*cos(roll)*sin(pitch) - Yc*cy*sin(pitch)*sin(roll) + Zc*cx*sin(pitch)*sin(yaw) + Yc*v*sin(pitch)*sin(roll) - Zc*u*sin(pitch)*sin(yaw) + Zc*f*cos(pitch)*cos(roll)*sin(yaw) - Zc*cy*cos(pitch)*sin(roll)*sin(yaw) - f*z0*cos(pitch)*cos(roll)*sin(yaw) + Zc*v*cos(pitch)*sin(roll)*sin(yaw) + cy*z0*cos(pitch)*sin(roll)*sin(yaw) - v*z0*cos(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(2,3) = (f*z0*sin(roll)*sin(yaw) - v*z0*cos(roll)*sin(yaw) + Zc*cx*cos(pitch)*cos(yaw) - Zc*u*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) - cx*z0*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v*cos(roll)*sin(yaw) + u*z0*cos(pitch)*cos(yaw) + cy*z0*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z0*cos(roll)*cos(yaw)*sin(pitch) - Zc*v*cos(yaw)*sin(pitch)*sin(roll) - cy*z0*cos(yaw)*sin(pitch)*sin(roll) + v*z0*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(2,4) = 0;
A(2,5) = 1;
A(2,6) = (cy*cos(roll)*cos(yaw) + cx*cos(pitch)*sin(yaw) + f*cos(yaw)*sin(roll) - v*cos(roll)*cos(yaw) - u*cos(pitch)*sin(yaw) - f*cos(roll)*sin(pitch)*sin(yaw) + cy*sin(pitch)*sin(roll)*sin(yaw) - v*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(2,7) = -(cy*cos(roll)*cos(yaw) + cx*cos(pitch)*sin(yaw) + f*cos(yaw)*sin(roll) - v*cos(roll)*cos(yaw) - u*cos(pitch)*sin(yaw) - f*cos(roll)*sin(pitch)*sin(yaw) + cy*sin(pitch)*sin(roll)*sin(yaw) - v*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(2,8) = (sin(pitch)*(Yc*cx*sin(pitch) - Yc*u*sin(pitch) - f*z0*cos(yaw)*sin(roll) + v*z0*cos(roll)*cos(yaw) + u*z0*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v*cos(roll)*cos(yaw) + Yc*v*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*sin(yaw) - cy*z0*cos(roll)*cos(yaw) - cx*z0*cos(pitch)*sin(yaw) + v*z0*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z0*cos(roll)*sin(pitch)*sin(yaw) - Zc*v*sin(pitch)*sin(roll)*sin(yaw) - cy*z0*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2 - (Yc*sin(pitch) + Zc*cos(pitch)*sin(yaw) - z0*cos(pitch)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(2,9) = (Yc*cos(pitch)*sin(roll) - Zc*cos(roll)*cos(yaw) + z0*cos(roll)*cos(yaw) - Zc*sin(pitch)*sin(roll)*sin(yaw) + z0*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll)) - (cos(pitch)*sin(roll)*(Yc*cx*sin(pitch) - Yc*u*sin(pitch) - f*z0*cos(yaw)*sin(roll) + v*z0*cos(roll)*cos(yaw) + u*z0*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v*cos(roll)*cos(yaw) + Yc*v*cos(pitch)*sin(roll) - Zc*u*cos(pitch)*sin(yaw) - cy*z0*cos(roll)*cos(yaw) - cx*z0*cos(pitch)*sin(yaw) + v*z0*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z0*cos(roll)*sin(pitch)*sin(yaw) - Zc*v*sin(pitch)*sin(roll)*sin(yaw) - cy*z0*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2;
A(3,1) = 0;
A(3,2) = 0;
A(3,3) = 0;
A(3,4) = 0;
A(3,5) = 0;
A(3,6) = 0;
A(3,7) = 1;
A(3,8) = 0;
A(3,9) = 0;
A(4,1) = -(f*(Zc - z0)*(cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v*cos(pitch)*cos(roll)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2;
A(4,2) = -(f*(Zc - z0)*(u*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2;
A(4,3) = 0;
A(4,4) = 0;
A(4,5) = 0;
A(4,6) = -f/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(4,7) = f/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll));
A(4,8) = -(f*sin(pitch)*(Zc - z0))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2;
A(4,9) = (f*cos(pitch)*sin(roll)*(Zc - z0))/(cx*sin(pitch) - u*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v*cos(pitch)*sin(roll))^2;

C = blkdiag(eocov,zvar,uvcov);
CovXYZs = A*C*A.';
end

function Cnew=enforceCovariance(C,thresh)
%somtimes due to rounding and computer LSB, the covariance isnt valid
% this enforces symmetric and positive definite if the Covariance Matrix
% is close enought to valid, as defined by the thresh.
if nargin==1
   thresh=1e-10; 
end
count = 0;

while count<10 && (~issymmetric(C) || ~calcIsPSD(C))
% make sure positive semi definite
C = enforcePositiveDefinite(C);
% make sure symmetric
C = enforceSymmetric(C,thresh);

count = count+1;

end
Cnew = C;

end

function isPSD = calcIsPSD(C)
%is positive semi definite
[~,D]=eig(C);

eigenvals = diag(D);

isPSD = ~sum(eigenvals<0)>0;
end

function [D,varD]=calcDistTPUplane(u1,v1,u2,v2,K,eo,z1,z2,eocov,z1z2cov,u1v1u2v2cov)
roll = eo(1);
pitch = eo(2);
yaw = eo(3);
Xc = eo(4);
Yc = eo(5);
Zc = eo(6);
f = K(1,1);
cx = K(1,3);
cy = K(2,3);

D = ((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2);

A(1,1) = -(2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Zc*v1*sin(roll)*sin(yaw) - f*z1*cos(roll)*sin(yaw) + cy*z1*sin(roll)*sin(yaw) - v1*z1*sin(roll)*sin(yaw) + Xc*cy*cos(pitch)*cos(roll) + Xc*f*cos(pitch)*sin(roll) - Xc*v1*cos(pitch)*cos(roll) + Zc*f*cos(roll)*sin(yaw) - Zc*cy*sin(roll)*sin(yaw) - Zc*cy*cos(roll)*cos(yaw)*sin(pitch) - Zc*f*cos(yaw)*sin(pitch)*sin(roll) + Zc*v1*cos(roll)*cos(yaw)*sin(pitch) + cy*z1*cos(roll)*cos(yaw)*sin(pitch) + f*z1*cos(yaw)*sin(pitch)*sin(roll) - v1*z1*cos(roll)*cos(yaw)*sin(pitch))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Zc*v2*sin(roll)*sin(yaw) - f*z2*cos(roll)*sin(yaw) + cy*z2*sin(roll)*sin(yaw) - v2*z2*sin(roll)*sin(yaw) + Xc*cy*cos(pitch)*cos(roll) + Xc*f*cos(pitch)*sin(roll) - Xc*v2*cos(pitch)*cos(roll) + Zc*f*cos(roll)*sin(yaw) - Zc*cy*sin(roll)*sin(yaw) - Zc*cy*cos(roll)*cos(yaw)*sin(pitch) - Zc*f*cos(yaw)*sin(pitch)*sin(roll) + Zc*v2*cos(roll)*cos(yaw)*sin(pitch) + cy*z2*cos(roll)*cos(yaw)*sin(pitch) + f*z2*cos(yaw)*sin(pitch)*sin(roll) - v2*z2*cos(roll)*cos(yaw)*sin(pitch))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - ((cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v1*cos(pitch)*cos(roll))*(Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2 + ((cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v2*cos(pitch)*cos(roll))*(Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2) + 2*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((v1*z1*cos(yaw)*sin(roll) + Yc*cy*cos(pitch)*cos(roll) - Zc*f*cos(roll)*cos(yaw) + Yc*f*cos(pitch)*sin(roll) - Yc*v1*cos(pitch)*cos(roll) + Zc*cy*cos(yaw)*sin(roll) + f*z1*cos(roll)*cos(yaw) - Zc*v1*cos(yaw)*sin(roll) - cy*z1*cos(yaw)*sin(roll) - Zc*cy*cos(roll)*sin(pitch)*sin(yaw) - Zc*f*sin(pitch)*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(pitch)*sin(yaw) + cy*z1*cos(roll)*sin(pitch)*sin(yaw) + f*z1*sin(pitch)*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(pitch)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (v2*z2*cos(yaw)*sin(roll) + Yc*cy*cos(pitch)*cos(roll) - Zc*f*cos(roll)*cos(yaw) + Yc*f*cos(pitch)*sin(roll) - Yc*v2*cos(pitch)*cos(roll) + Zc*cy*cos(yaw)*sin(roll) + f*z2*cos(roll)*cos(yaw) - Zc*v2*cos(yaw)*sin(roll) - cy*z2*cos(yaw)*sin(roll) - Zc*cy*cos(roll)*sin(pitch)*sin(yaw) - Zc*f*sin(pitch)*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(pitch)*sin(yaw) + cy*z2*cos(roll)*sin(pitch)*sin(yaw) + f*z2*sin(pitch)*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(pitch)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - ((cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v1*cos(pitch)*cos(roll))*(Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2 + ((cy*cos(pitch)*cos(roll) + f*cos(pitch)*sin(roll) - v2*cos(pitch)*cos(roll))*(Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,2) = -(2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Xc*u1*cos(pitch) - Xc*cx*cos(pitch) + u1*z1*cos(yaw)*sin(pitch) + Xc*f*cos(roll)*sin(pitch) + Zc*cx*cos(yaw)*sin(pitch) - Xc*cy*sin(pitch)*sin(roll) - Zc*u1*cos(yaw)*sin(pitch) + Xc*v1*sin(pitch)*sin(roll) - cx*z1*cos(yaw)*sin(pitch) + Zc*f*cos(pitch)*cos(roll)*cos(yaw) - Zc*cy*cos(pitch)*cos(yaw)*sin(roll) - f*z1*cos(pitch)*cos(roll)*cos(yaw) + Zc*v1*cos(pitch)*cos(yaw)*sin(roll) + cy*z1*cos(pitch)*cos(yaw)*sin(roll) - v1*z1*cos(pitch)*cos(yaw)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*u2*cos(pitch) - Xc*cx*cos(pitch) + u2*z2*cos(yaw)*sin(pitch) + Xc*f*cos(roll)*sin(pitch) + Zc*cx*cos(yaw)*sin(pitch) - Xc*cy*sin(pitch)*sin(roll) - Zc*u2*cos(yaw)*sin(pitch) + Xc*v2*sin(pitch)*sin(roll) - cx*z2*cos(yaw)*sin(pitch) + Zc*f*cos(pitch)*cos(roll)*cos(yaw) - Zc*cy*cos(pitch)*cos(yaw)*sin(roll) - f*z2*cos(pitch)*cos(roll)*cos(yaw) + Zc*v2*cos(pitch)*cos(yaw)*sin(roll) + cy*z2*cos(pitch)*cos(yaw)*sin(roll) - v2*z2*cos(pitch)*cos(yaw)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - ((u1*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v1*sin(pitch)*sin(roll))*(Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2 + ((u2*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v2*sin(pitch)*sin(roll))*(Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2) + 2*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Yc*u1*cos(pitch) - Yc*cx*cos(pitch) - cx*z1*sin(pitch)*sin(yaw) + u1*z1*sin(pitch)*sin(yaw) + Yc*f*cos(roll)*sin(pitch) - Yc*cy*sin(pitch)*sin(roll) + Zc*cx*sin(pitch)*sin(yaw) + Yc*v1*sin(pitch)*sin(roll) - Zc*u1*sin(pitch)*sin(yaw) + Zc*f*cos(pitch)*cos(roll)*sin(yaw) - Zc*cy*cos(pitch)*sin(roll)*sin(yaw) - f*z1*cos(pitch)*cos(roll)*sin(yaw) + Zc*v1*cos(pitch)*sin(roll)*sin(yaw) + cy*z1*cos(pitch)*sin(roll)*sin(yaw) - v1*z1*cos(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*u2*cos(pitch) - Yc*cx*cos(pitch) - cx*z2*sin(pitch)*sin(yaw) + u2*z2*sin(pitch)*sin(yaw) + Yc*f*cos(roll)*sin(pitch) - Yc*cy*sin(pitch)*sin(roll) + Zc*cx*sin(pitch)*sin(yaw) + Yc*v2*sin(pitch)*sin(roll) - Zc*u2*sin(pitch)*sin(yaw) + Zc*f*cos(pitch)*cos(roll)*sin(yaw) - Zc*cy*cos(pitch)*sin(roll)*sin(yaw) - f*z2*cos(pitch)*cos(roll)*sin(yaw) + Zc*v2*cos(pitch)*sin(roll)*sin(yaw) + cy*z2*cos(pitch)*sin(roll)*sin(yaw) - v2*z2*cos(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - ((u1*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v1*sin(pitch)*sin(roll))*(Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2 + ((u2*cos(pitch) - cx*cos(pitch) + f*cos(roll)*sin(pitch) - cy*sin(pitch)*sin(roll) + v2*sin(pitch)*sin(roll))*(Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,3) = (2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((f*z1*cos(yaw)*sin(roll) - v1*z1*cos(roll)*cos(yaw) - u1*z1*cos(pitch)*sin(yaw) - Zc*cy*cos(roll)*cos(yaw) - Zc*cx*cos(pitch)*sin(yaw) - Zc*f*cos(yaw)*sin(roll) + Zc*v1*cos(roll)*cos(yaw) + Zc*u1*cos(pitch)*sin(yaw) + cy*z1*cos(roll)*cos(yaw) + cx*z1*cos(pitch)*sin(yaw) - v1*z1*sin(pitch)*sin(roll)*sin(yaw) + Zc*f*cos(roll)*sin(pitch)*sin(yaw) - Zc*cy*sin(pitch)*sin(roll)*sin(yaw) - f*z1*cos(roll)*sin(pitch)*sin(yaw) + Zc*v1*sin(pitch)*sin(roll)*sin(yaw) + cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (f*z2*cos(yaw)*sin(roll) - v2*z2*cos(roll)*cos(yaw) - u2*z2*cos(pitch)*sin(yaw) - Zc*cy*cos(roll)*cos(yaw) - Zc*cx*cos(pitch)*sin(yaw) - Zc*f*cos(yaw)*sin(roll) + Zc*v2*cos(roll)*cos(yaw) + Zc*u2*cos(pitch)*sin(yaw) + cy*z2*cos(roll)*cos(yaw) + cx*z2*cos(pitch)*sin(yaw) - v2*z2*sin(pitch)*sin(roll)*sin(yaw) + Zc*f*cos(roll)*sin(pitch)*sin(yaw) - Zc*cy*sin(pitch)*sin(roll)*sin(yaw) - f*z2*cos(roll)*sin(pitch)*sin(yaw) + Zc*v2*sin(pitch)*sin(roll)*sin(yaw) + cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))) + 2*((f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Zc*cx*cos(pitch)*cos(yaw) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Zc*cx*cos(pitch)*cos(yaw) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,4) = 0;
A(1,5) = 0;
A(1,6) = (2*((cy*cos(roll)*cos(yaw) + cx*cos(pitch)*sin(yaw) + f*cos(yaw)*sin(roll) - v1*cos(roll)*cos(yaw) - u1*cos(pitch)*sin(yaw) - f*cos(roll)*sin(pitch)*sin(yaw) + cy*sin(pitch)*sin(roll)*sin(yaw) - v1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (cy*cos(roll)*cos(yaw) + cx*cos(pitch)*sin(yaw) + f*cos(yaw)*sin(roll) - v2*cos(roll)*cos(yaw) - u2*cos(pitch)*sin(yaw) - f*cos(roll)*sin(pitch)*sin(yaw) + cy*sin(pitch)*sin(roll)*sin(yaw) - v2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))) - 2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((u1*cos(pitch)*cos(yaw) - cx*cos(pitch)*cos(yaw) + cy*cos(roll)*sin(yaw) + f*sin(roll)*sin(yaw) - v1*cos(roll)*sin(yaw) + f*cos(roll)*cos(yaw)*sin(pitch) - cy*cos(yaw)*sin(pitch)*sin(roll) + v1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (u2*cos(pitch)*cos(yaw) - cx*cos(pitch)*cos(yaw) + cy*cos(roll)*sin(yaw) + f*sin(roll)*sin(yaw) - v2*cos(roll)*sin(yaw) + f*cos(roll)*cos(yaw)*sin(pitch) - cy*cos(yaw)*sin(pitch)*sin(roll) + v2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,7) = (2*z1 - 2*z2 - (2*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*(cy*cos(roll)*cos(yaw) + cx*cos(pitch)*sin(yaw) + f*cos(yaw)*sin(roll) - v1*cos(roll)*cos(yaw) - u1*cos(pitch)*sin(yaw) - f*cos(roll)*sin(pitch)*sin(yaw) + cy*sin(pitch)*sin(roll)*sin(yaw) - v1*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) + (2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*(u1*cos(pitch)*cos(yaw) - cx*cos(pitch)*cos(yaw) + cy*cos(roll)*sin(yaw) + f*sin(roll)*sin(yaw) - v1*cos(roll)*sin(yaw) + f*cos(roll)*cos(yaw)*sin(pitch) - cy*cos(yaw)*sin(pitch)*sin(roll) + v1*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,8) = -(2*z1 - 2*z2 - (2*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*(cy*cos(roll)*cos(yaw) + cx*cos(pitch)*sin(yaw) + f*cos(yaw)*sin(roll) - v2*cos(roll)*cos(yaw) - u2*cos(pitch)*sin(yaw) - f*cos(roll)*sin(pitch)*sin(yaw) + cy*sin(pitch)*sin(roll)*sin(yaw) - v2*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) + (2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*(u2*cos(pitch)*cos(yaw) - cx*cos(pitch)*cos(yaw) + cy*cos(roll)*sin(yaw) + f*sin(roll)*sin(yaw) - v2*cos(roll)*sin(yaw) + f*cos(roll)*cos(yaw)*sin(pitch) - cy*cos(yaw)*sin(pitch)*sin(roll) + v2*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,9) = -(2*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Yc*sin(pitch) + Zc*cos(pitch)*sin(yaw) - z1*cos(pitch)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (sin(pitch)*(Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2) + 2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Xc*sin(pitch) + Zc*cos(pitch)*cos(yaw) - z1*cos(pitch)*cos(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (sin(pitch)*(Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,10) = (2*((Yc*cos(pitch)*sin(roll) - Zc*cos(roll)*cos(yaw) + z1*cos(roll)*cos(yaw) - Zc*sin(pitch)*sin(roll)*sin(yaw) + z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (cos(pitch)*sin(roll)*(Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2)*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))) + 2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Xc*cos(pitch)*sin(roll) + Zc*cos(roll)*sin(yaw) - z1*cos(roll)*sin(yaw) - Zc*cos(yaw)*sin(pitch)*sin(roll) + z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (cos(pitch)*sin(roll)*(Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll))^2))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,11) = (2*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Yc*sin(pitch) + Zc*cos(pitch)*sin(yaw) - z2*cos(pitch)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - (sin(pitch)*(Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2) + 2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Xc*sin(pitch) + Zc*cos(pitch)*cos(yaw) - z2*cos(pitch)*cos(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - (sin(pitch)*(Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));
A(1,12) = -(2*((Yc*cos(pitch)*sin(roll) - Zc*cos(roll)*cos(yaw) + z2*cos(roll)*cos(yaw) - Zc*sin(pitch)*sin(roll)*sin(yaw) + z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - (cos(pitch)*sin(roll)*(Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2)*((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))) + 2*((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))*((Xc*cos(pitch)*sin(roll) + Zc*cos(roll)*sin(yaw) - z2*cos(roll)*sin(yaw) - Zc*cos(yaw)*sin(pitch)*sin(roll) + z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)) - (cos(pitch)*sin(roll)*(Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll)))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll))^2))/(2*((z1 - z2)^2 + ((Yc*cx*sin(pitch) - Yc*u1*sin(pitch) - f*z1*cos(yaw)*sin(roll) + v1*z1*cos(roll)*cos(yaw) + u1*z1*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v1*cos(roll)*cos(yaw) + Yc*v1*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*sin(yaw) - cy*z1*cos(roll)*cos(yaw) - cx*z1*cos(pitch)*sin(yaw) + v1*z1*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z1*cos(roll)*sin(pitch)*sin(yaw) - Zc*v1*sin(pitch)*sin(roll)*sin(yaw) - cy*z1*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Yc*cx*sin(pitch) - Yc*u2*sin(pitch) - f*z2*cos(yaw)*sin(roll) + v2*z2*cos(roll)*cos(yaw) + u2*z2*cos(pitch)*sin(yaw) + Yc*f*cos(pitch)*cos(roll) + Zc*cy*cos(roll)*cos(yaw) - Yc*cy*cos(pitch)*sin(roll) + Zc*cx*cos(pitch)*sin(yaw) + Zc*f*cos(yaw)*sin(roll) - Zc*v2*cos(roll)*cos(yaw) + Yc*v2*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*sin(yaw) - cy*z2*cos(roll)*cos(yaw) - cx*z2*cos(pitch)*sin(yaw) + v2*z2*sin(pitch)*sin(roll)*sin(yaw) - Zc*f*cos(roll)*sin(pitch)*sin(yaw) + Zc*cy*sin(pitch)*sin(roll)*sin(yaw) + f*z2*cos(roll)*sin(pitch)*sin(yaw) - Zc*v2*sin(pitch)*sin(roll)*sin(yaw) - cy*z2*sin(pitch)*sin(roll)*sin(yaw))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2 + ((Xc*cx*sin(pitch) - Xc*u1*sin(pitch) + f*z1*sin(roll)*sin(yaw) - v1*z1*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u1*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v1*cos(pitch)*sin(roll) - cx*z1*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v1*cos(roll)*sin(yaw) + u1*z1*cos(pitch)*cos(yaw) + cy*z1*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z1*cos(roll)*cos(yaw)*sin(pitch) - Zc*v1*cos(yaw)*sin(pitch)*sin(roll) - cy*z1*cos(yaw)*sin(pitch)*sin(roll) + v1*z1*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u1*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v1*cos(pitch)*sin(roll)) - (Xc*cx*sin(pitch) - Xc*u2*sin(pitch) + f*z2*sin(roll)*sin(yaw) - v2*z2*cos(roll)*sin(yaw) + Xc*f*cos(pitch)*cos(roll) + Zc*cx*cos(pitch)*cos(yaw) - Xc*cy*cos(pitch)*sin(roll) - Zc*u2*cos(pitch)*cos(yaw) - Zc*cy*cos(roll)*sin(yaw) + Xc*v2*cos(pitch)*sin(roll) - cx*z2*cos(pitch)*cos(yaw) - Zc*f*sin(roll)*sin(yaw) + Zc*v2*cos(roll)*sin(yaw) + u2*z2*cos(pitch)*cos(yaw) + cy*z2*cos(roll)*sin(yaw) - Zc*f*cos(roll)*cos(yaw)*sin(pitch) + Zc*cy*cos(yaw)*sin(pitch)*sin(roll) + f*z2*cos(roll)*cos(yaw)*sin(pitch) - Zc*v2*cos(yaw)*sin(pitch)*sin(roll) - cy*z2*cos(yaw)*sin(pitch)*sin(roll) + v2*z2*cos(yaw)*sin(pitch)*sin(roll))/(cx*sin(pitch) - u2*sin(pitch) + f*cos(pitch)*cos(roll) - cy*cos(pitch)*sin(roll) + v2*cos(pitch)*sin(roll)))^2)^(1/2));

C = blkdiag(eocov,z1z2cov,u1v1u2v2cov);
varD = A*C*A.';

end

function makeGLOPOVeqns
%% Make Equations
clc
syms roll pitch yaw Xc Yc Zc
R = [RPY2DCM(roll,pitch,yaw)];

syms f cx cy
K = [f 0 cx;0 f cy;0 0 1];

syms Xw Yw Zw s u v
Collinearity = s*[u;v;1] - K*R*[Xw-Xc;Yw-Yc;Zw-Zc] == 0;

syms z0
% extra constraint is flat plane
constraint = Zw-z0 == 0;

%solve algebraically
eqn = [Collinearity; constraint];
unknowns = [Xw Yw Zw s];

S = solve(eqn,unknowns);

XYZSeqn = simplify([S.Xw;S.Yw;S.Zw;S.s]);


% print equations
fprintf('%s=%s;\n',unknowns(1),XYZSeqn(1));
fprintf('%s=%s;\n',unknowns(2),XYZSeqn(2));
fprintf('%s=%s;\n',unknowns(3),XYZSeqn(3));
fprintf('%s=%s;\n\n',unknowns(4),XYZSeqn(4));

% Solve Partials 
knowns = [roll pitch yaw Xc Yc Zc z0 u v];
for i=1:numel(XYZSeqn)
    for j=1:numel(knowns)
        ddx(i,j) = diff(XYZSeqn(i),knowns(j));
        fprintf('A(%.0f,%.0f) = %s;\n',i,j,ddx(i,j));
    end 
end

end

function makePixelDiffGLOPOVeqns
%% This is my attempt at calculating the variance in the distance between two points
%% Make Equations
%% First Pixel Coordinates
clc
syms roll pitch yaw Xc Yc Zc
R = RPY2DCM(roll,pitch,yaw);

syms f cx cy
K = [f 0 cx;0 f cy;0 0 1];

syms Xw1 Yw1 Zw1 s1 u1 v1
Collinearity = s1*[u1;v1;1] - K*R*[Xw1-Xc;Yw1-Yc;Zw1-Zc] == 0;

syms z1
% extra constraint is flat plane
constraint = Zw1-z1 == 0;

%solve algebraically
eqn = [Collinearity; constraint];
unknowns = [Xw1 Yw1 Zw1 s1];

S = solve(eqn,unknowns);

XYZSeqn1 = simplify([S.Xw1;S.Yw1;S.Zw1;S.s1]);
%% Second Pixel Coordinates
syms roll pitch yaw Xc Yc Zc
R = RPY2DCM(roll,pitch,yaw);

syms f cx cy
K = [f 0 cx;0 f cy;0 0 1];

syms Xw2 Yw2 Zw2 s2 u2 v2
Collinearity = s2*[u2;v2;1] - K*R*[Xw2-Xc;Yw2-Yc;Zw2-Zc] == 0;

syms z2
% extra constraint is flat plane
constraint = Zw2-z2 == 0;

%solve algebraically
eqn = [Collinearity; constraint];
unknowns = [Xw2 Yw2 Zw2 s2];

S = solve(eqn,unknowns);

XYZSeqn2 = simplify([S.Xw2;S.Yw2;S.Zw2;S.s2]);

% World Distance Between Pixels Equation
D = sqrt((XYZSeqn2(1)-XYZSeqn1(1))^2+(XYZSeqn2(2)-XYZSeqn1(2))^2+(XYZSeqn2(3)-XYZSeqn1(3))^2);

%% Print Dist equation
fprintf('D=%s;\n',D);

% Solve Partials
knowns = [roll pitch yaw Xc Yc Zc z1 z2 u1 v1 u2 v2];
for i=1:numel(D)
    for j=1:numel(knowns)
        ddx(i,j) = diff(D,knowns(j));
        fprintf('A(%.0f,%.0f) = %s;\n',i,j,ddx(i,j));
    end 
end

end
